# Set colors to 256
set -g default-terminal "screen-256color"

# Remove escape delay
set -s escape-time 0

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded."

# quick pane cycling
unbind ^A 
bind ^A select-pane -t :.+

# sane pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

# sane pane resizeing with awareness of vim splits
bind -n M-j if-shell "$is_vim" "send-keys 5 M-j" "resize-pane -D 5"
bind -n M-k if-shell "$is_vim" "send-keys 5 M-k" "resize-pane -U 5"
bind -n M-l if-shell "$is_vim" "send-keys 5 M-l" "resize-pane -R 5"
bind -n M-h if-shell "$is_vim" "send-keys 5 M-h" "resize-pane -L 5"

# sane pane swaping with awareness of vim splits
bind -n M-J if-shell "$is_vim" "send-keys M-J" "swap-pane -D"
bind -n M-K if-shell "$is_vim" "send-keys M-K" "swap-pane -U"
bind -n M-L if-shell "$is_vim" "send-keys M-L" "swap-pane -R"
bind -n M-H if-shell "$is_vim" "send-keys M-H" "swap-pane -L"

# unified zoom
bind -n M-z if-shell "$is_vim" "send-keys M-z" "resize-pane -Z"
bind -n M-Z resize-pane -Z

# Resize
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -L 10
bind h resize-pane -R 10
# intuitive split keys

unbind \ 
unbind - 
unbind + 
unbind | 
unbind _ 
unbind = 


bind \ split-window -h
bind - split-window -v
bind + select-layout tiled 
bind | select-layout even-vertical
bind _ select-layout even-horizontal
bind = select-layout main-horizontal


# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Allow mouse
set-option -g mouse on
#set -g mode-mouse on
#set -g mouse-resize-pane on

